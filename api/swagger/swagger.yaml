swagger: "2.0"
info:
  description: |
    This is a webApi designed to facilitate the order exchange that takes place
    between small and large flowershops. It is commong for flower shops to
    have a customer that wants to send flowers to another person located far
    away and physical delivery of goods from the originating flowers shops is not
    possible. There are many floral tranmission delivery services which exist and
    are not open and charge exorbinant amounts of fees. This webAPI is designed
    to level the playing field, reduce costs, and improve customer experience.
    Integrating with this webAPI will not address all edge cases that may arise, 
    but it will serve to address the most major and important use cases that
    are needed to provide great services to your customer.

    [Learn about FlowerExchange](http://flowers-flowers.com) or join the Facebook Page 'flower-exchange'.

    For this sample, you can use the security api_key `changeme` and username `admin` to test the authorization filters.
  contact:
    name: davidaebersold+FlowerExchange@gmail.com
  license:
    name: CC
    url: www.flowers-flowers.com/license.html
  version: "0.0.1"
  title: Flower Exchange
  termsOfService: http://flowers-flowers.com/terms/
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /account:
    x-swagger-router-controller: account
    get:
      tags:
        - account
      description: Returns account detail the caller
      # used as the method name of the controller
      operationId: account
      # responses may fall through to errors
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Account"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [],  username: [] } ]
  /accounts:
    x-swagger-router-controller: accounts
    get:
      tags:
        - accounts
      description: Returns accounts list the caller - should only be available to authorized super users.
      # used as the method name of the controller
      operationId: accounts
      # responses may fall through to errors
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AccountsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /account/create:
    x-swagger-router-controller: accountCreate
    post:
      tags:
        - account
      description: Creates a new account
      operationId: accountCreate
      produces:
        - application/json
        - application/xml
      parameters:
        - name: account
          in: body
          description: Account object
          required: false
          schema:
            $ref: "#/definitions/Account"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AccountResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /account/forgotSecretKey:
    x-swagger-router-controller: accountForgotSecretKey
    get:
      tags:
        - account
      description: Sends email to account holder with new secrect key
      operationId: accountForgotSecretKey
      produces:
        - application/json
        - application/xml
      parameters:
        - name: contactEmail
          in: query
          description: Email of the account holder
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AccountForgotPasswordResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /account/resetSecretKey:
    x-swagger-router-controller: accountResetSecretKey
    get:
      tags:
        - account
      description: Sends email to account holder with new secrect key
      operationId: accountResetSecretKey
      produces:
        - application/json
        - application/xml
      parameters:
        - name: contactEmail
          in: query
          description: Email of the account holder
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AccountForgotPasswordResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /account/confirmSecretKey:
    x-swagger-router-controller: accountConfirmSecretKey
    get:
      tags:
        - account
      description: Sends email to account holder with new secrect key
      operationId: accountConfirmSecretKey
      produces:
        - application/json
        - application/xml
      parameters:
        - name: contactEmail
          in: query
          description: Email of the account holder
          required: false
          type: string
        - name: token
          in: query
          description: New token to confirm update
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AccountForgotPasswordConfirmationResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /account/update:
    x-swagger-router-controller: accountUpdate
    put:
      tags:
        - account
      description: Updates an existing account
      operationId: accountUpdate
      produces:
        - application/json
      parameters:
        - name: account
          in: body
          description: Account object
          required: false
          schema:
            $ref: "#/definitions/Account"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AccountResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /orders:
    x-swagger-router-controller: orders
    get:
      tags:
        - orders
      description: Returns list of 'Orders' that you have accepted.
      # used as the method name of the controller
      operationId: orders
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/OrdersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /ordersCreated:
    x-swagger-router-controller: ordersCreated
    get:
      tags:
        - orders
      description: Returns list of 'Orders' that you have accepted.
      # used as the method name of the controller
      operationId: ordersCreated
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/OrdersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /eligibileOrders:
    # binds a128 app logic to a route
    x-swagger-router-controller: eligibileOrders
    get:
      tags:
        - orders
      description: Returns list of 'Orders' to the caller based on given Account
      # used as the method name of the controller
      operationId: eligibileOrders
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/OrdersResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /order:
    x-swagger-router-controller: order
    get:
      tags:
        - orders
      description: Returns the details of a specific 'Order' to the caller
      # used as the method name of the controller
      operationId: order
      parameters:
        - name: orderId
          in: query
          description: The orderId of the order in which details are requested
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/OrderResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /order/create:
    x-swagger-router-controller: orderCreate
    post:
      tags:
        - orders
      description: Creates an 'Order'
      # used as the method name of the controller
      operationId: orderCreate
      parameters:
        - name: order
          in: body
          description: Order object that needs to be added to the marketplace
          required: true
          schema:
            $ref: "#/definitions/OrderCreateSchema"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/OrderResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /order/accept:
    x-swagger-router-controller: orderAccept
    get:
      tags:
        - orders
      description: Accepts an 'Order'
      # used as the method name of the controller
      operationId: orderAccept
      parameters:
        - name: orderId
          in: query
          description: The orderId of the order in which details accepted
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrderAcceptSchema"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security: [ { api_key: [], username: [] } ]
  /swagger:
    x-swagger-pipe: swagger_raw
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
  username:
    type: apiKey
    name: username
    in: header
# complex objects have schema definitions
definitions:
  AccountResponse:
    required:
      - result
      - message
    properties:
      result:
        type: boolean
      message:
        type: string
  AccountsResponse:
    required:
      - message
    properties:
      message:
        type: string
  OrdersResponse:
    required:
      - message
    properties:
      message:
        type: string
  OrderResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  AccountForgotPasswordResponse:
    required:
      - message
    properties:
      message:
        type: string
  AccountForgotPasswordConfirmationResponse:
    required:
      - message
    properties:
      message:
        type: string
  OrderDetails:
    type: object
    properties:
      itemNumber:
        type: string
        description: Item Number
      itemName: 
        type: string
        description: Name of the item
      itemDescription:
        type: string
        description: Item description
      itemCost: 
        type: number
        format: float
      itemSimilarSubstitutionOk:
        type: boolean
      itemMaxCost: 
        type: number
        format: float
  OrderAcceptSchema:
    type: object
    properties:
      order:
        type: object
        description: Order detail
      result: 
        type: boolean
        description: True if successful in accepting order, false otherwise
      resultMessage: 
        type: string
        description: Details about the acceptance result
  Order:
    type: object
    properties:
      originatingAccountId:
        type: string
      fullfillmentAccountId:
        type: string
      id:
        type: string
        format: int64
      toFirstName:
        type: string
      toLastName:
        type: string
      toAddress1:
        type: string
      toAddress2:
        type: string
      toCity:
        type: string
      toState:
        type: string
      toZipCode:
        type: number
      toHomePhone:
        type: string
      toMobilePhone:
        type: string
      toEmail:
        type: string
      fromFirstName:
        type: string
      fromLastName:
        type: string
      fromAddress1:
        type: string
      fromAddress2:
        type: string
      fromCity:
        type: string
      fromState:
        type: string
      fromZipCode:
        type: number
      fromHomePhone:
        type: string
      fromMobilePhone:
        type: string
      fromEmail:
        type: string
        description: Email address from the sender
      orderDetails:
        type: array
        items:
          $ref: '#/definitions/OrderDetails'
      orderTotal:
        type: number
        format: float
      orderTotalNotToExceed: 
        type: number
        format: float
      deliveryDate:
        type: string
        format: date
      timedDelivery:
        type: boolean
      deliveryTime:
        type: string
        format: date-time
      expirationDate:
        type: string
        format: date
      orderStatus:
        type: integer
        format: int32
        description: Order Status
  OrderCreateSchema:
    type: object
    properties:
      id:
        type: string
      toFirstName:
        type: string
      toLastName:
        type: string
      toAddress1:
        type: string
      toAddress2:
        type: string
      toCity:
        type: string
      toState:
        type: string
      toZipCode:
        type: number
      toHomePhone:
        type: string
      toMobilePhone:
        type: string
      toEmail:
        type: string
      fromFirstName:
        type: string
      fromLastName:
        type: string
      fromAddress1:
        type: string
      fromAddress2:
        type: string
      fromCity:
        type: string
      fromState:
        type: string
      fromZipCode:
        type: number
      fromHomePhone:
        type: string
      fromMobilePhone:
        type: string
      fromEmail:
        type: string
        description: Email address from the sender
      orderDetails:
        type: array
        items:
          $ref: '#/definitions/OrderDetails'
      orderTotal:
        type: number
        format: float
      orderTotalNotToExceed: 
        type: number
        format: float
      deliveryDate:
        type: string
        format: date
      timedDelivery:
        type: boolean
      deliveryTime:
        type: string
        format: date-time
      expirationDate:
        type: string
        format: date
      orderStatus:
        type: integer
        format: int32
        description: Order Status
  Account:
    type: object
    properties:
      username:
        type: string
        description: Username on account
        title: Username
      name:
        type: string
        description: Name on account
        title: Name
      address1:
        type: string
        description: Address1 of account holder
        title: Address 1
      address2:
        type: string
        description: Address2 of account holder
        title: Address 2
      city:
        type: string
        description: City
        title: City
      state:
        type: string
        description: State
        title: State
      zip:
        type: string
        description: Zip code
        title: Zip Code
      contactEmail:
        type: string
        description: Email address to associate to the account
        title: E-Mail Address
      contactPhone:
        type: string
        description: Phone number
        title: Phone Number
      autoAcceptIfMoreThan:
        type: number
        description: If the amount of the order total is above this amount, auto accept.
        title: Auto Accept If More Than
      autoRejectIfLessThan:
        type: number
        description: If the amount of the order is less than this amount, auto reject.
        title: Auto Reject If Less Than
      minimumOrderAmount:
        type: number
        description: Set a minmum order amount
        title: Minimum Order Amount
      defaultMileRadiusForAutoAcceptReject:
        type: number
        description: DefaultMileRadiusForAutoAcceptReject
        title: Default Mile Radius for Automatic Accept or Reject Settings